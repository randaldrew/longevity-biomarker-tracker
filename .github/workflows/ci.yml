name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: longevity_test
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov requests fastapi uvicorn sqlalchemy pymysql python-dotenv
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Install MySQL client
      run: |
        sudo apt-get update
        sudo apt-get install -y mysql-client

    - name: Initialize test database
      run: |
        mysql -h 127.0.0.1 -u root -prootpassword -e "CREATE DATABASE IF NOT EXISTS longevity_test;"
        mysql -h 127.0.0.1 -u root -prootpassword longevity_test < sql/schema.sql
        if [ -f tests/sample_dump.sql ]; then
          mysql -h 127.0.0.1 -u root -prootpassword longevity_test < tests/sample_dump.sql
        fi

    - name: Check schema integrity
      run: |
        mysqldump -h 127.0.0.1 -u root -prootpassword --no-data longevity_test > tests/schema_from_db.sql
        # Compare schema files (ignoring comments, whitespace, and normalizing multiple spaces)
        diff -w <(grep -v "^--" sql/schema.sql | grep -v "^$" | tr -s ' \t') <(grep -v "^--" tests/schema_from_db.sql | grep -v "^$" | tr -s ' \t') || { echo "Schema files don't match!"; exit 1; }

    - name: Start API server for testing
      run: |
        cd src/api
        nohup python -m uvicorn main:app --host 127.0.0.1 --port 8000 > api.log 2>&1 &
        echo $! > api.pid
        # Give the server a moment to start
        sleep 5
        cd ../..  # Return to root directory

    - name: Run tests
      run: |
        pytest tests/ --cov=src
      env:
        MYSQL_HOST: 127.0.0.1
        MYSQL_USER: test_user
        MYSQL_PASSWORD: test_password
        MYSQL_DATABASE: longevity_test
        API_URL: http://127.0.0.1:8000

    - name: Stop API server
      run: |
        if [ -f src/api/api.pid ]; then
          kill $(cat src/api/api.pid)
          rm src/api/api.pid
        fi
